// npx prisma migrate dev --name 'init' --preview-feature
// npx prisma db push --preview-feature (only to fix shadow db issue)
// npx prisma generate

datasource db {
  provider = "postgresql"
  // url               = "postgresql://seanquillen:test1@localhost:5432/atxhh?schema=public"
  // shadowDatabaseUrl = env("DATABASE_URL")
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Restaurant {
  id               Int       @id @default(autoincrement())
  createdAt        DateTime  @default(now())
  name             String
  url              String
  warnings         Json?
  image            String
  description      String
  happyHourDays    String[]
  price            String
  rating           Rating
  menu             String
  cuisine          Cuisine[]
  whatToGoFor      GoFor[]
  when             String
  startTime        String
  endTime          String
  percentOffDrinks Int
  percentOffFood   Int
  coordinates      Json?     @unique
  address          String
  votes            Vote[]
  active           Boolean   @default(true)
  createdBy        User?     @relation(fields: [createdByID], references: [id])
  createdByID      Int?
}

model User {
  id          Int          @id @default(autoincrement())
  name        String
  email       String       @unique
  role        Role         @default(USER)
  password    String
  restaurants Restaurant[]
  votes       Vote[]
}

model Vote {
  id            Int        @id @default(autoincrement())
  restaurant    Restaurant @relation(fields: [restaurauntID], references: [id])
  restaurauntID Int
  user          User       @relation(fields: [userID], references: [id])
  userID        Int

  @@unique([restaurauntID, userID])
}

enum Role {
  USER
  ADMIN
}

enum WarningEnum {
  WRONG_TIMES
  NO_LONGER_ACTIVE
}

enum Rating {
  ONE
  TWO
  THREE
  FOUR
  FIVE
  SIX
  SEVEN
  EIGHT
  NINE
  TEN
  NA
}

enum Cuisine {
  JAPANESE
  AMERICAN
  CHINESE
  INDIAN
  MEXICAN
  ITALIAN
  STEAK_HOUSE
  ASIAN
  SOUTHERN
  SEAFOOD
}

enum GoFor {
  DRINKS
  FOOD
}
